server:
  port: ${PORT:8082}

spring:
  application:
    name: package-service-api

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 12qwaszx


  jpa:
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: true
    properties:
      hibernate:
        format_sql: true
      #javax.persistence.schema-generation -> Essas configs servem para gerar os scripts sql que podem ser usados nos arquivos do flyway
#      javax:
#        persistence:
#          schema-generation:
#            scripts:
#              action: create
#              create-target: create.sql
#              create-source: metadata
    hibernate:
      ddl-auto: none

  cloud:
    stream:
      kafka:
        bindings:
          cardTopic-in-0:
            consumer:
              enableDlq: true
              dlqName: card-topic-dlq
        streams:
          binder:
            applicationId: ${spring.application.name}
        binder:
          brokers: localhost:9092
      function:
        definition: cardTopic;

      bindings:
        card-topic-out-0:
          destination: card-topic

        cardTopic-in-0:
          destination: card-topic
          group: ${spring.application.name}
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 3000
            backOffMultipler: 2


# TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.org.springframework.cloud.stream: ERROR
logging.level.org.apache.kafka: ERROR
logging.level.o.a.k.clients.producer: ERROR