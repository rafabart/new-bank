version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  postgres:
    image: postgres:12-alpine
    networks:
      - broker-kafka
    environment:
#      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12qwaszx
    ports:
      - 5432:5432
    volumes:
#      - ./postgres-data:/var/lib/postgresql/data
      - ./create_databases.sql:/docker-entrypoint-initdb.d/create_tables.sql

  mongodb:
    image: mongo:latest
    networks:
      - broker-kafka
    environment:
      - MONGO_INITDB_ROOT_USERNAME=adminMongo
      - MONGO_INITDB_ROOT_PASSWORD=12qwaszx
      - MONGO_INITDB_DATABASE=cards
    ports:
      - 27017:27017
#    volumes:
#      - ~/mongo:/data/db


networks:
  broker-kafka:
    driver: bridge